{"ast":null,"code":"var _jsxFileName = \"/Users/MoonHyeSeong/Documents/react-tutorial/src/components/TOC.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TOC extends Component {\n  //컴포넌트를 렌더릴 할때 변경사항이 있을때만 렌더링 하는 법\n  //return true => render()실행 O\n  //return false => render()실행 X\n  shouldComponentUpdate(newProps) {\n    console.log('===> TOC shouldComponentUpdate');\n\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    console.log('===> TOC Render');\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n\n    while (i < data.length) {\n      lists.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: '/content/' + data[i].id,\n          onClick: function (id, e) {\n            e.preventDefault();\n            this.props.onChangePage(id); //이벤트가 동작시 props 로\n          }.bind(this, data[i].id),\n          children: data[i].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, data[i].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this));\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TOC;","map":{"version":3,"sources":["/Users/MoonHyeSeong/Documents/react-tutorial/src/components/TOC.js"],"names":["React","Component","TOC","shouldComponentUpdate","newProps","console","log","props","data","render","lists","i","length","push","id","e","preventDefault","onChangePage","bind","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1B;AACA;AACA;AACAE,EAAAA,qBAAqB,CAACC,QAAD,EAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AACA,QAAI,KAAKC,KAAL,CAAWC,IAAX,KAAoBJ,QAAQ,CAACI,IAAjC,EAAuC;AACrC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAII,KAAK,GAAG,EAAZ;AACA,QAAIF,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,QAAIG,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGH,IAAI,CAACI,MAAhB,EAAwB;AACtBF,MAAAA,KAAK,CAACG,IAAN,eACE;AAAA,+BACE;AACE,UAAA,IAAI,EAAE,cAAcL,IAAI,CAACG,CAAD,CAAJ,CAAQG,EAD9B;AAEE,UAAA,OAAO,EAAE,UAAUA,EAAV,EAAcC,CAAd,EAAiB;AACxBA,YAAAA,CAAC,CAACC,cAAF;AACA,iBAAKT,KAAL,CAAWU,YAAX,CAAwBH,EAAxB,EAFwB,CAEK;AAC9B,WAHQ,CAGPI,IAHO,CAGF,IAHE,EAGIV,IAAI,CAACG,CAAD,CAAJ,CAAQG,EAHZ,CAFX;AAAA,oBAOGN,IAAI,CAACG,CAAD,CAAJ,CAAQQ;AAPX;AAAA;AAAA;AAAA;AAAA;AADF,SAASX,IAAI,CAACG,CAAD,CAAJ,CAAQG,EAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAaAH,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AACD,wBACE;AAAA,6BACE;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArCyB;;AAwC5B,eAAeR,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass TOC extends Component {\n  //컴포넌트를 렌더릴 할때 변경사항이 있을때만 렌더링 하는 법\n  //return true => render()실행 O\n  //return false => render()실행 X\n  shouldComponentUpdate(newProps) {\n    console.log('===> TOC shouldComponentUpdate');\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n    return true;\n  }\n  render() {\n    console.log('===> TOC Render');\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n    while (i < data.length) {\n      lists.push(\n        <li key={data[i].id}>\n          <a\n            href={'/content/' + data[i].id}\n            onClick={function (id, e) {\n              e.preventDefault();\n              this.props.onChangePage(id); //이벤트가 동작시 props 로\n            }.bind(this, data[i].id)}\n          >\n            {data[i].title}\n          </a>\n        </li>\n      );\n      i = i + 1;\n    }\n    return (\n      <nav>\n        <ul>{lists}</ul>\n      </nav>\n    );\n  }\n}\n\nexport default TOC;\n"]},"metadata":{},"sourceType":"module"}