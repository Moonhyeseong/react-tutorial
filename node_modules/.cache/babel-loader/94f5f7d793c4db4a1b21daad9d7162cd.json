{"ast":null,"code":"var _jsxFileName = \"/Users/MoonHyeSeong/Documents/react-tutorial/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'create',\n      selected_comtent_id: 1,\n      subject: {\n        title: 'WEB',\n        sub: 'World Wide Web!'\n      },\n      welcome: {\n        title: 'welcome',\n        desc: 'hello, React!'\n      },\n      textContents: {\n        title: 'HTML',\n        desc: 'HTML is ...'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n\n  getReadContent() {\n    let i = 0;\n\n    while (i < this.state.contents.length) {\n      let data = this.state.contents[i];\n\n      if (data.id === this.state.selected_comtent_id) {\n        return data;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  getContent() {\n    let _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'read') {\n      var _content = this.getReadContent();\n\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _content.title,\n        desc: _content.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          this.max_content_id = this.max_content_id + 1; //#기존 배열에 push 함수를 사용해 데이터를 추가할 시 원본이 변경되기 때문에 부적합\n          // this.state.contents.push(\n          //   {id: this.max_content_id, title:_title, desc:_desc}\n          // )\n          //#concat을 사용하면 원본 배열을 복제한 새로운 배열에 항목이 추가됨\n          // let _contents = this.state.contents.concat(\n          //   {id: this.max_content_id, title:_title, desc:_desc}\n          // )\n          //#배열을 복제하여 새로운 배열을 만드는 방법\n          //#객체의 경우는 object.assign()\n\n          let newContents = Array.from(this.state.contents);\n          newContents.push({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n          this.setState({\n            contents: newContents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.mode === 'update') {\n      _content = this.getReadContent();\n      _article = /*#__PURE__*/_jsxDEV(UpdateContent, {\n        data: _content,\n        onSubmit: function (_id, _title, _desc) {\n          let _contents = Array.from(this.state.contents);\n\n          let i = 0;\n\n          while (i < _contents.length) {\n            if (_contents[i] === _id) {\n              _contents[i] = {\n                id: _id,\n                title: _title,\n                desc: _desc\n              };\n            }\n\n            i += 1;\n          }\n\n          this.setState({\n            contents: _contents\n          });\n          console.log(_title, _desc);\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    }\n\n    return _article;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          //컴포넌트에서 만든 props 설정\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"my subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          //이벤트를 받기 위한 setState가 있는 props\n          this.setState({\n            //setState로 state 변경\n            mode: 'read',\n            //state의 모드를 read로\n            selected_comtent_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          //모드선택 함수 props\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), this.getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/MoonHyeSeong/Documents/react-tutorial/src/App.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","CreateContent","UpdateContent","App","constructor","props","max_content_id","state","mode","selected_comtent_id","subject","title","sub","welcome","desc","textContents","contents","id","getReadContent","i","length","data","getContent","_title","_desc","_article","_content","newContents","Array","from","push","setState","bind","_id","_contents","console","log","render","Number","_mode"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'create',\n      selected_comtent_id: 1,\n      subject: { title: 'WEB', sub: 'World Wide Web!' },\n      welcome: { title: 'welcome', desc: 'hello, React!' },\n      textContents: { title: 'HTML', desc: 'HTML is ...' },\n      contents: [\n        { id: 1, title: 'HTML', desc: 'HTML is for information' },\n        { id: 2, title: 'CSS', desc: 'CSS is for design' },\n        { id: 3, title: 'JavaScript', desc: 'JavaScript is for interactive' },\n      ],\n    };\n  }\n  getReadContent() {\n    let i = 0;\n    while (i < this.state.contents.length) {\n      let data = this.state.contents[i];\n      if (data.id === this.state.selected_comtent_id) {\n        return data;\n        break;\n      }\n      i += 1;\n    }\n  }\n  getContent() {\n    let _title,\n      _desc,\n      _article = null;\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>;\n    } else if (this.state.mode === 'read') {\n      var _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>;\n    } else if (this.state.mode === 'create') {\n      _article = (\n        <CreateContent\n          onSubmit={function (_title, _desc) {\n            this.max_content_id = this.max_content_id + 1;\n            //#기존 배열에 push 함수를 사용해 데이터를 추가할 시 원본이 변경되기 때문에 부적합\n            // this.state.contents.push(\n            //   {id: this.max_content_id, title:_title, desc:_desc}\n            // )\n            //#concat을 사용하면 원본 배열을 복제한 새로운 배열에 항목이 추가됨\n            // let _contents = this.state.contents.concat(\n            //   {id: this.max_content_id, title:_title, desc:_desc}\n            // )\n            //#배열을 복제하여 새로운 배열을 만드는 방법\n            //#객체의 경우는 object.assign()\n            let newContents = Array.from(this.state.contents);\n            newContents.push({\n              id: this.max_content_id,\n              title: _title,\n              desc: _desc,\n            });\n            this.setState({\n              contents: newContents,\n            });\n          }.bind(this)}></CreateContent>\n      );\n    } else if (this.state.mode === 'update') {\n      _content = this.getReadContent();\n      _article = (\n        <UpdateContent\n          data={_content}\n          onSubmit={function (_id, _title, _desc) {\n            let _contents = Array.from(this.state.contents);\n            let i = 0;\n            while (i < _contents.length) {\n              if (_contents[i] === _id) {\n                _contents[i] = { id: _id, title: _title, desc: _desc };\n              }\n              i += 1;\n            }\n            this.setState({\n              contents: _contents,\n            });\n            console.log(_title, _desc);\n          }.bind(this)}></UpdateContent>\n      );\n    }\n    return _article;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Subject\n          title={this.state.subject.title}\n          sub={this.state.subject.sub}\n          onChangePage={function () {\n            //컴포넌트에서 만든 props 설정\n            this.setState({\n              mode: 'welcome',\n            });\n          }.bind(this)}></Subject>\n        <h3>my subjects</h3>\n        <TOC\n          onChangePage={function (id) {\n            //이벤트를 받기 위한 setState가 있는 props\n            this.setState({\n              //setState로 state 변경\n              mode: 'read', //state의 모드를 read로\n              selected_comtent_id: Number(id),\n            });\n          }.bind(this)}\n          data={this.state.contents}></TOC>\n        <br />\n        <Control\n          onChangeMode={function (_mode) {\n            //모드선택 함수 props\n            this.setState({\n              mode: _mode,\n            });\n          }.bind(this)}></Control>\n\n        {/* 선택에 따라 변환되는 contents 컴포넌트 */}\n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}