{"ast":null,"code":"var _jsxFileName = \"/Users/MoonHyeSeong/Documents/react-tutorial/src/components/TOC.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TOC extends Component {\n  //컴포넌트를 렌더릴 할때 변경사항이 있을때만 렌더링 하는 법\n  //return true => render()실행 O\n  //return false => render()실행 X\n  shouldComponentUpdate(newProps) {\n    console.log('===> TOC shouldComponentUpdate');\n\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    console.log('===> TOC Render');\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n\n    while (i < data.length) {\n      lists.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/content/\" + data[i].id,\n          onClick: function (id, e) {\n            e.preventDefault();\n            this.props.onChangePage(id); //이벤트가 동작시 props 로 \n          }.bind(this, data[i].id),\n          children: data[i].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, data[i].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this));\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TOC;","map":{"version":3,"sources":["/Users/MoonHyeSeong/Documents/react-tutorial/src/components/TOC.js"],"names":["React","Component","TOC","shouldComponentUpdate","newProps","console","log","props","data","render","lists","i","length","push","id","e","preventDefault","onChangePage","bind","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1B;AACA;AACA;AACAE,EAAAA,qBAAqB,CAACC,QAAD,EAAU;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AACA,QAAG,KAAKC,KAAL,CAAWC,IAAX,KAAoBJ,QAAQ,CAACI,IAAhC,EAAqC;AACnC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AACDC,EAAAA,MAAM,GAAE;AACNJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAII,KAAK,GAAG,EAAZ;AACA,QAAIF,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,QAAIG,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAGH,IAAI,CAACI,MAAf,EAAsB;AACpBF,MAAAA,KAAK,CAACG,IAAN,eACA;AAAA,+BACE;AACE,UAAA,IAAI,EAAE,cAAYL,IAAI,CAACG,CAAD,CAAJ,CAAQG,EAD5B;AAEE,UAAA,OAAO,EAAE,UAASA,EAAT,EAAaC,CAAb,EAAe;AACtBA,YAAAA,CAAC,CAACC,cAAF;AACA,iBAAKT,KAAL,CAAWU,YAAX,CAAwBH,EAAxB,EAFsB,CAEO;AAC9B,WAHQ,CAGPI,IAHO,CAGF,IAHE,EAGIV,IAAI,CAACG,CAAD,CAAJ,CAAQG,EAHZ,CAFX;AAAA,oBAMEN,IAAI,CAACG,CAAD,CAAJ,CAAQQ;AANV;AAAA;AAAA;AAAA;AAAA;AADF,SAASX,IAAI,CAACG,CAAD,CAAJ,CAAQG,EAAjB;AAAA;AAAA;AAAA;AAAA,cADA;AAUAH,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AACD,wBACE;AAAA,6BACE;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AApCyB;;AAuC5B,eAAeR,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass TOC extends Component {\n  //컴포넌트를 렌더릴 할때 변경사항이 있을때만 렌더링 하는 법\n  //return true => render()실행 O\n  //return false => render()실행 X\n  shouldComponentUpdate(newProps){\n    console.log('===> TOC shouldComponentUpdate')\n    if(this.props.data === newProps.data){\n      return false;\n    } \n    return true\n  }\n  render(){\n    console.log('===> TOC Render')\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n    while(i < data.length){\n      lists.push(\n      <li key={data[i].id}>\n        <a \n          href={\"/content/\"+data[i].id}\n          onClick={function(id, e){\n            e.preventDefault();\n            this.props.onChangePage(id); //이벤트가 동작시 props 로 \n          }.bind(this, data[i].id)}\n        >{data[i].title}</a>\n      </li>);\n      i = i + 1;\n    }\n    return (\n      <nav>\n        <ul>\n          {lists}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default TOC;\n"]},"metadata":{},"sourceType":"module"}